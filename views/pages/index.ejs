<!DOCTYPE html>
<html lang="en">
  <head>
    <%- include('../partials/head'); %>
    <script>
      const preview = (html) => {
        if (html && html.length > 0) {
          try {
            // set iframe src to b64 encoded html
            const b64 = btoa(html);
            document.querySelector("#preview").src = "/preview/" + b64;
          } catch (e) {
            console.error("Invalid base64 encoded html");
          }
        }
      };
      const fetchBlockStats = async () => {
        try {
          const response = await fetch(
            "https://ordinals.shruggr.cloud/bsv/v1/block/latest"
          );
          const { height, hash } = await response.json();
          console.log({ height, hash });
          if (height) {
            document.querySelector(
              "#latest-block"
            ).innerHTML = `Latest Block: ${height}`;
            document.querySelector("#latest-block").classList.remove("hidden");
            document.querySelector("#latest-block").classList.add("block");
            const color = stringToColor(hash);
            const color2 = stringToColor(height);
            document
              .querySelector("#latest-block")
              .classList.add(`text-[${color}]`);
            document
              .querySelector("#ordfs-title")
              .classList.add(`text-[${color2}]`);
          }
        } catch (error) {
          console.error(error);
        }
      };
      document.addEventListener("DOMContentLoaded", async () => {
        await fetchBlockStats();
      });

      function stringToColor(input) {
        // Convert input to string in case it's a number
        input = input.toString();

        // Simple hash function for strings
        let hash = 0;
        for (let i = 0; i < input.length; i++) {
          hash = input.charCodeAt(i) + ((hash << 5) - hash);
        }

        // Convert hash to a hex color
        let color = "#";
        for (let i = 0; i < 3; i++) {
          let value = ((hash >> (i * 8)) & 0xff) + 128; // Add 128 to make it pastel
          color += ("00" + value.toString(16)).substr(-2);
        }

        return color;
      }
    </script>
  </head>
  <body class="bg-black">
    <div class="bg-black text-white h-screen">
      <header class="relative"><%- include('../partials/header'); %></header>
    </div>
    <section class="relative transform-gpu overflow-hidden" aria-hidden="true">
      <%- include('../partials/try'); %>
    </section>
    <footer class=""><%- include('../partials/footer'); %></footer>
  </body>
</html>
